name: Workflow for tests

on:
  push:
  pull_request:
    branches:
      - master

jobs:

  #COMPILE
  compile:
    name: Compile with Maven

    runs-on: ubuntu-latest

    steps:
      - name: Checkout branch
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: maven

      - name: Compile with Maven
        run: mvn compile

  #SONARCLOUD ANALYSIS
  sonarcloud-analysis:
    name: SonarCloud Analysis

    needs: [ compile ]

    runs-on: ubuntu-latest

    steps:
      - name: Checkout branch
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: maven

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=damman96_RestaurantManager

  #BUILD
  build:
    name: Build with Maven

    needs: [ compile ]

    runs-on: ubuntu-latest

    steps:
      - name: Checkout branch
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: maven

      - name: Build with Maven
        run: mvn clean install -D=skipTests

  # UNIT TESTS
  test-unit:
    name: Unit tests with Maven

    needs: [ compile, build ]

    runs-on: ubuntu-latest

    steps:
      - name: Checkout branch
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: maven

      - name: Unit tests with Maven
        run: mvn test '-Dtest=!*TestIT*'

  # IT TESTS
  test-IT:
    name: Integration tests with Maven

    runs-on: ubuntu-latest

    needs: [ compile, build, test-unit ]

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: restaurant
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: admin
        ports:
          - 5432:5432
        options:
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout branch
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: maven

      - name: Integration tests with Maven
        run: mvn test '-Dtest=*TestIT*'

  #ALL  TESTS
  test-all:
    name: All tests with Maven

    runs-on: ubuntu-latest

    needs: [ compile, build, test-unit, test-IT ]

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: restaurant
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: admin
        ports:
          - 5432:5432
        options:
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout branch
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: maven

      - name: All tests with Maven
        run: mvn test '-Dtest=*Test*'