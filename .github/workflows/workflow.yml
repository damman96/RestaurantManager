name: CI workflow

on:
  push:
    branches: '**'
  pull_request:
    branches: '**'

jobs:

  build:
    name: Build with Maven

    runs-on: ubuntu-latest

    steps:
      - name: Checkout branch
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: maven

      - name: Build with Maven
        run: mvn clean install -D=skipTests

  test-unit:
    name: Unit tests with Maven

    needs: [ build ]

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: restaurant
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: admin
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options:
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout branch
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: maven

      - name: Unit tests with Maven
        run: mvn test '-Dtest=!*TestIT*'

  test-IT:
    name: Integration tests with Maven

    runs-on: ubuntu-latest

    needs: [ build, test-unit ]

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: restaurant
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: admin
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options:
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout branch
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: maven

      - name: Integration tests with Maven
        run: mvn test '-Dtest=*TestIT*'

  test-all:
    name: All tests with Maven

    runs-on: ubuntu-latest

    needs: [ build, test-unit, test-IT ]

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: restaurant
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: admin
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options:
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout branch
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: maven

      - name: All tests with Maven
        run: mvn test